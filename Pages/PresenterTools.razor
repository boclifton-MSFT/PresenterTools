@implements IDisposable
@using Shared
@using System.Timers
@page "/"

<PageTitle>Presenter Tools</PageTitle>

<h3>
    Presenter here?
    <br />
    <button 
        class="btn btn-lg btn-rounded @(PresenterPresent ? "btn-success" : "btn-danger")" 
        style="border-radius:50%;height:100px;width:100px;"
        @onclick="TogglePresenter"></button>    
</h3>

<div class="h3">
    Take a break (minutes)
</div>
<div class="my-3">
    <input type="number" class="form-control" style="max-width: 150px;" @bind="BreakLength" />
</div>


<button 
    class="btn btn-lg btn-success" 
    @onclick="StartCountdownTimer">
    Start Timer
</button>

<button
    class="btn btn-lg btn-danger"
    @onclick="StopCountdownTimer">
    Stop Timer
</button>

@if (TimeRemaining > TimeSpan.Zero)
{
    <div class="h3 mt-3">
        Time Remaining in Break

        <div class="text-dark h1">@OutputTime</div>
    </div>    
}

@code {
    private DateTime CountdownStartTime;
    private DateTime CountdownEndTime;
    private int BreakLength;
    private TimeSpan TimeRemaining;
    private string OutputTime;

    private bool IsCountdownEnabled;

    private Timer timer;

    private bool PresenterPresent = true;

    private void TogglePresenter()
    {
        PresenterPresent = !PresenterPresent;
    }

    private void StartCountdownTimer()
    {
        CountdownEndTime = DateTime.Now.AddMinutes(BreakLength);
        TimeRemaining = TimeSpan.From(BreakLength);
        timer = new Timer(1000);
        timer.Elapsed += OnTick;
        timer.Enabled = true;
        timer.Start();
    }

    private void StopCountdownTimer()
    {
        timer.Enabled = false;
        timer.Stop();
        TimeRemaining = TimeSpan.Zero;
    }

    private void OnTick(Object source, ElapsedEventArgs e)
    {
        TimeRemaining = CountdownEndTime.Subtract(e.SignalTime);
        if (TimeRemaining < TimeSpan.Zero)
        {
            timer.Stop();            
        }
        OutputTime = TimeRemaining.ToString(@"hh\:mm\:ss");
        StateHasChanged();
    }

    public void Dispose()
    {
        timer.Stop();
    }
}
